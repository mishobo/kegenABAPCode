
*Invoice
 types: begin of Invoice_s,
 line_items type LineItem,
 payer_benefit_desc_code type string,
 payer_benefit_code type n LENGTH 1,
 benefit_desc type string,
 pool_number type string,
 service_type type string,
 amount type ZDE_TL_AMOUNT,
 invoice_number type string,
 invoice_id type string,
 gross_amount type ZDE_TL_AMOUNT,
 end of Invoice_s.

types: Invoices type standard table of Invoice_s with non-unique default key.
data: invoice_result type Invoices.
data: wa_invoices like line of invoice_result.

*diagnosis
 types: begin of diagnosis_s,
 code type string,
 coding_standard type string,
 is_primary type n LENGTH 1,
 name type string,
 id type string,
 end of diagnosis_s.

types: diagnosis type standard table of diagnosis_s with non-unique default key.
data: diagnosis_result type diagnosis.
data: wa_diagnosis like line of diagnosis_result .
data: diagnosis_post type STANDARD TABLE OF zta_mcs_diagnose.
data: wa_diagnosis_post like line of diagnosis_post.

*Attachment
 types: begin of Attachment_s,
   id type ZDE_KGINV,
   att_name type string,
   att_type type string,
   insert_time type aedat,
 end of Attachment_s.

types: Attachment type standard table of Attachment_s with non-unique default key.
data: attachment_result type Attachment.
data: wa_attachment like line of attachment_result.

*line items
 types: begin of LineItem_s,
 payer_group_code type string,
 prov_item_code type string,
 payer_item_name type string,
 payer_item_code type string,
 payer_group_name type string,
 prov_item_name type string,
 amount type ZDE_TL_AMOUNT,
 quantity type n LENGTH 10,
 item_id type string,
 service_group type string,
 charge_date type ZDE_VISDT,
 unit_price type ZDE_TL_AMOUNT,
 end of LineItem_s.

types: LineItem type standard table of LineItem_s with non-unique default key.
data: item_result type LineItem.
data: wa_LineItem like line of item_result .


*CLAIMS
 types: begin of Claims_s,
 roaming_amount type string,
 payer_prov_code type ZDE_LIFNR_A,
 payer_prov_name type string,
 admissions type string,
 preauth type string,
 batch_number type string,
 member_number type string,
 invoices type Invoices,
 diagnosis type diagnosis,
 start_date type string,
 end_date type string,
 pol_id type string,
 country_code type string,
 central_id type string,
 amount type string,
 insert_time type string,
 claim_id type string,
 policy_currency_code type string,
 integ_scheme_code type string,
 integ_member_number type string,
 other_number type string,
 card_serial_number type string,
 integ_scheme_name type string,
 patient_name type string,
 scheme_name type string,
 provider_name type string,
 provider_code type string,
 roaming_country type string,
 attachments type attachment,
 payer_name type string,
 claim_code type LineItem,
 payer_code type string,
 gross_amount type string,
 dispatch_date type string,
 patient_number type string,
 visit_number type string,
 visit_start type begda,
 visit_end type string,
 currency type string,
 end of Claims_s.

types: claims type standard table of Claims_s with non-unique default key.
data: claims_result type claims.
data: wa_claims like line of claims_result.

data: itab_header type STANDARD TABLE OF ZTA_MCS_INV_HDR .
data: wa_header like LINE OF itab_header.

data: itab_item type STANDARD TABLE OF ZTA_MCS_INV_ITEM .
data: wa_item like LINE OF itab_item.

data:itab_attachment TYPE STANDARD TABLE OF zta_mcs_attach.
data:wa_attachments LIKE LINE OF itab_attachment.


TYPES: BEGIN OF t_response,
success TYPE string,
data  TYPE claims,
msg TYPE string,
END OF t_response .

TYPES:t_response_map TYPE SORTED TABLE OF t_response.
DATA: m_response TYPE t_response.

* getting response
     DATA: response TYPE string.

     response = lo_http_client->response->get_cdata( ).
        /ui2/cl_json=>deserialize(

        EXPORTING json = response pretty_name = /ui2/cl_json=>pretty_mode-camel_case CHANGING data = m_response ).

      status = m_response-claim_count.


LOOP AT M_RESPONSE-CLAIMS into wa_claims .
LOOP AT WA_CLAIMS-INVOICES into wa_invoices.

CALL FUNCTION 'ZFM_MCS_INV_HDR_RUNG_SERS'
	EXPORTING
		LV_VARIABLE_01 = 'I'
		LV_VARIABLE_02 = 0000
	IMPORTING
		LV_VARIABLE_03  = LV_VARIABLE_03.

	if wa_invoices-service_type = 'OP'.
		WA_HEADER-INVTYP = '02'.
      else.
            WA_HEADER-INVTYP = '01'.
      ENDIF.

 CONCATENATE '000' WA_CLAIMS-payer_prov_code into provider_code.

              WA_HEADER-KGINV = LV_VARIABLE_03.
              WA_HEADER-INVNO = wa_invoices-invoice_number.
              WA_HEADER-INVDT = wa_claims-visit_start.
              WA_HEADER-INVSN = wa_invoices-invoice_id.
              WA_HEADER-AMOUNT = wa_invoices-amount.
              WA_HEADER-LIFNR = provider_code.
              WA_HEADER-MEMBER_NO = WA_CLAIMS-integ_member_number.
              WA_HEADER-GJAHR = SY-DATUM(4).
              WA_HEADER-INVSN = wa_claims-claim_id.
              WA_HEADER-WERKS = werks.
              WA_HEADER-INVSTS = '02'.
              WA_HEADER-INVDAT = SY-DATUM.
              WA_HEADER-ERDAT = SY-DATUM.
              WA_HEADER-ERNAM = SY-UNAME.
              WA_HEADER-STAFF_NO = WA_CLAIMS-integ_member_number+0(5) .

LOOP AT WA_INVOICES-LINE_ITEMS INTO  wa_LineItem.

 CALL FUNCTION 'NUMBER_GET_NEXT'
   EXPORTING
      nr_range_nr = '01'
      object      = 'ZNR_MCS_IN'
   IMPORTING
      number      = lv_number.

                wa_item-REC_ID = lv_number.
                wa_item-KGINV = LV_VARIABLE_03.
                wa_item-GJAHR = SY-DATUM(4).
                wa_item-ITEM_ID = wa_LineItem-item_id.
                wa_item-PROV_ITEM_CODE = wa_LineItem-prov_item_code.
                wa_item-PROV_ITEM_NAME = wa_LineItem-prov_item_name.
                wa_item-SERVICE_GROUP = wa_LineItem-service_group.
                wa_item-BEN_NAME = WA_CLAIMS-patient_name.
                wa_item-VISDT = wa_LineItem-charge_date.
                wa_item-QUANTITY = wa_LineItem-quantity.
                wa_item-AMOUNT = wa_LineItem-unit_price.
                wa_item-payer_group_code = wa_LineItem-payer_group_code.
                wa_item-payer_item_name = wa_LineItem-payer_item_name.
                wa_item-payer_item_code = wa_LineItem-payer_item_code.
                wa_item-payer_group_name = wa_LineItem-payer_group_name.
                wa_item-LINTYP = '11'.
                modify zta_mcs_inv_item from wa_item.
                clear wa_item.
                clear wa_LineItem.

ENDLOOP.
modify zta_mcs_inv_hdr from wa_header.
clear lv_number.
clear werks.

***clear wa_header.
clear LV_VARIABLE_03.

*insert header and item.
ENDLOOP.


LOOP AT WA_CLAIMS-DIAGNOSIS into wa_diagnosis.
   CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      nr_range_nr = '01'
      object      = 'ZNR_MCS_IN'
      IMPORTING
      number      = lv_number.

              wa_diagnosis_post-REC_ID = lv_number.
              wa_diagnosis_post-CLAIM_ID = wa_claims-claim_id.
              wa_diagnosis_post-DIAGNOSIS_ID = wa_diagnosis-ID.
              wa_diagnosis_post-MEM_NUMBER = WA_CLAIMS-integ_member_number.
              wa_diagnosis_post-CODING_STANDARD = wa_diagnosis-CODING_STANDARD .
              wa_diagnosis_post-CODE = wa_diagnosis-CODE.
              wa_diagnosis_post-NAME = wa_diagnosis-NAME.
              wa_diagnosis_post-IS_PRIMARY = wa_diagnosis-IS_PRIMARY.
              wa_diagnosis_post-VISDT = wa_claims-visit_start.
              wa_diagnosis_post-PICKED_STATUS = 0.

              modify zta_mcs_diagnose from wa_diagnosis_post.
              clear wa_diagnosis_post.
              clear wa_diagnosis.
              clear lv_number.

ENDLOOP.
clear WA_CLAIMS-DIAGNOSIS.

ENDLOOP.






