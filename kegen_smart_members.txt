*&---------------------------------------------------------------------*
*& Report Z_CLASS_TEST
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZMCS_API_MEMBERS.

                                                             .
*** data: lo_members_mgmt  type ref to ZMCS_API_MEMBERS_MGMT .
***  data: lo_http_client  type ref to if_http_client .
***    data: me  type ref to ZMCS_API_MEMBERS_MGMT .
    data: lo_http_client  type ref to if_http_client .
    data lv_uri type string.
    data lv_client_id	type string.
    data lv_client_secret	type string.
    data lv_token type string.
    data response type string.

    TYPES : BEGIN OF local_type_response,
success TYPE string,
msg TYPE string,
data TYPE string,
END OF local_type_response.

    data ls_response TYPE local_type_response.

   lv_uri = '/auth/integ-clients/oauth/token?grant_type=client_credentials'.
**  lv_url_token = '/auth/integ-clients/oauth/token?'.
  lv_client_id = '25486dw8486ddef4864gf864654e86KGN'.
  lv_client_secret = 'xTDlKG6VEdniaBoiKnjXvOQwYR4'.

 cl_http_client=>create_by_destination(
 EXPORTING
 destination = 'SMART API' " Logical destination (specified in function call)
 IMPORTING
 client = lo_http_client " HTTP Client Abstraction
 EXCEPTIONS
 argument_not_found = 1
 destination_not_found = 2
 destination_no_authority = 3
 plugin_not_active = 4
 internal_error = 5
 OTHERS = 6
 ).


 call method lo_http_client->request->set_method
    exporting
      method = 'POST'.

  call method lo_http_client->request->set_version
    exporting
      version = if_http_request=>co_protocol_version_1_0.   " 1.0


  lo_http_client->request->set_header_field(
      name = 'Content-Type'
      value = 'application/json'

      ).

   cl_http_utility=>set_request_uri(
    EXPORTING request = lo_http_client->request
              uri = lv_uri ).



  lo_http_client->request->set_form_field(
EXPORTING
    name = 'client_id' " Name of form field
    value = lv_client_id " Form field value
).

  lo_http_client->request->set_form_field(
EXPORTING
    name = 'client_secret' " Name of form field
    value = lv_client_secret " Form field value
).



* Send the HTTP Post
  call method lo_http_client->send
    exporting
      timeout                    = 15   " 15 Seconds
    exceptions
      http_communication_failure = 1
      http_invalid_state         = 2.

* Disable SAP's pop-up for user id and password:
  lo_http_client->propertytype_logon_popup = lo_http_client->co_disabled.    "  POPUP for user id and pwd


*Read the Response
  call method lo_http_client->receive
    exceptions
      http_communication_failure = 1
      http_invalid_state         = 2
      http_processing_failed     = 3.



  lv_token = lo_http_client->response->get_cdata( ).


    .
PERFORM MEMBERS.
*  CALL METHOD lo_members_mgmt->IF_HTTP_EXTENSION~HANDLE_REQUEST
*    EXPORTING
*       SERVER = ' '.

FORM MEMBERS.
     DATA: lo_http_client TYPE REF TO if_http_client.
     DATA: response TYPE string,
          lv_url   TYPE string,
          lv_auth  TYPE string,
          status  TYPE string,
          lv_auth2 TYPE string,
          lv_client_id type string,
          lv_client_secret type string.
    data itab type table of zta_mcs_mem_dets .
    data wa like line of itab.


* data types
data memberno type string.
data staffno type string.
data familycode type string.
data catcode type string.
data memtype type string.
data surname type string.
data secondname type string.
data thirdname type string.
data othernames type string.
data idnumber type string.
data dob type string.
data gender type string.
data nhif type string.
data schemestart type string.
data schemeend type string.
data userid type string.
data customerid type string.
data polcode type string.


*** Getting Token

      TYPES:
        BEGIN OF t_entry,
          access_token TYPE string,
          token_type   TYPE string,
          expires_in   TYPE n LENGTH 8,
          scope        TYPE string,
          jti          TYPE string,
        END OF t_entry .

      TYPES:
        t_entry_map TYPE SORTED TABLE OF t_entry WITH UNIQUE KEY access_token.
      DATA: m_entries TYPE t_entry.

   TYPES:
        BEGIN OF t_response,
          status_msg  TYPE string,
          updated_rows   TYPE string,
          statusCodeType   TYPE string,
          statusCodeMsg        TYPE string,
          objectCode          TYPE string,
          error_type   TYPE string,
          statusCode       TYPE string,
          errorCode          TYPE string,
          successful type string,
          id type string,
        END OF t_response .

      TYPES:
        t_response_map TYPE SORTED TABLE OF t_response.
      DATA: m_response TYPE t_response.


        IF lv_token IS NOT INITIAL. "Retrieving your Token here

        /ui2/cl_json=>deserialize(

        EXPORTING json = lv_token pretty_name = /ui2/cl_json=>pretty_mode-camel_case CHANGING data = m_entries ).

      lv_auth2 = m_entries-access_token.

     CONCATENATE 'Bearer' lv_auth2 INTO lv_auth SEPARATED BY space. "Using Token Value create your Authorization Code
      ENDIF.

        lv_url = '/api/v2/integqa/members?country=KE'.

 cl_http_client=>create_by_destination(
 EXPORTING
 destination = 'SMART API' " Logical destination (specified in function call)
 IMPORTING
 client = lo_http_client " HTTP Client Abstraction
 EXCEPTIONS
 argument_not_found = 1
 destination_not_found = 2
 destination_no_authority = 3
 plugin_not_active = 4
 internal_error = 5
 OTHERS = 6
 ).
      IF sy-subrc <> 0.
        "error handling
      ENDIF.

   call method lo_http_client->request->set_method
    exporting
      method = 'POST'.

    call method lo_http_client->request->set_version
    exporting
      version = if_http_request=>co_protocol_version_1_0.   " 1.0


  lo_http_client->request->set_header_field(
      name = 'Content-Type'
      value = 'application/json'

      ).

   lo_http_client->request->set_header_field(
      name = 'Authorization'
      value = lv_auth

      ).

*base url
         cl_http_utility=>set_request_uri(
    EXPORTING request = lo_http_client->request
              uri = lv_url ).
*         headers
*
*         *select data
*      SELECT * FROM ZTA_MCS_MEM_DETS INTO CORRESPONDING FIELDS OF TABLE itab WHERE POLICY_CODE = '1067' and  ( PICKED_STATUS = 0 OR PICKED_STATUS = 2 ) .
      SELECT * FROM ZTA_MCS_MEM_DETS INTO CORRESPONDING FIELDS OF TABLE itab WHERE  PICKED_STATUS = 0 OR PICKED_STATUS = 2  .
        loop at itab into wa.
          memberno = wa-member_no .
          staffno = wa-pernr.
          familycode = wa-FAMILY_CODE.
          catcode = wa-CAT_CODE.
          memtype = wa-MEM_TYPE.
          surname = wa-SURNAME.
          secondname = wa-FIRST_NAME.
          thirdname = wa-SECOND_NAME.
          othernames = wa-OTHER_NAMES.
          concatenate wa-DOB+0(4) wa-DOB+4(2) wa-DOB+6(2) into dob separated  by '-'.
          idnumber = wa-ID_NO.
          gender = wa-GENDER.
          nhif = wa-NHIF_NUMBER.
          concatenate wa-SCHEME_START_DAT+0(4) wa-SCHEME_START_DAT+4(2) wa-SCHEME_START_DAT+6(2) into schemestart separated  by '-'.
*          concatenate wa-DEACT_DATE+0(4) wa-DEACT_DATE+4(2) wa-DEACT_DATE+6(2) into schemeend separated  by '-'.
          concatenate '2099' wa-DEACT_DATE+4(2) wa-DEACT_DATE+6(2) into schemeend separated  by '-'.
          userid = wa-USER_ID.
          polcode = wa-POLICY_CODE.



  lo_http_client->request->set_form_field(
EXPORTING
    name = 'membershipNumber' " Name of form field
    value = memberno  " Form field value
).

    lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'staffNumber'    " Name of the form field
        value =  staffno    " Value of the form field
    ).
    lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'familyCode'   " Name of the form field
        value =  familycode         " Value of the form field
    ).
    lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'clnCatCode'     " Name of the form field
        value =  catcode         " Value of the form field
    ).
    lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'memType'    " Name of the form field
        value =  memtype
               " Value of the form field
     ).
        lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'surname'    " Name of the form field
        value =  surname
               " Value of the form field
     ).
            lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'secondName'    " Name of the form field
        value =  secondname
               " Value of the form field
     ).
                lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'thirdName'    " Name of the form field
        value =  thirdname
               " Value of the form field
     ).
                    lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'otherNames'    " Name of the form field
        value =  othernames
               " Value of the form field
     ).
                        lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'idNumber'    " Name of the form field
        value =  idnumber
               " Value of the form field
     ).
     lo_http_client->request->set_form_field(
    EXPORTING
        name  =  'dob'    " Name of the form field
        value =  dob
               " Value of the form field
     ).

       lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'gender'     " Name of the form field
        value =  gender         " Value of the form field
    ).
    lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'nhifNumber'    " Name of the form field
        value =  nhif
               " Value of the form field
     ).
        lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'schemeStartDate'    " Name of the form field
        value =  schemestart
               " Value of the form field
     ).
            lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'schemeEndDate'    " Name of the form field
        value =  schemeend
               " Value of the form field
     ).
                lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'userID'    " Name of the form field
        value =  userid
               " Value of the form field
     ).
                    lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'roamingCountries'    " Name of the form field
        value =  'KE'
               " Value of the form field
     ).
             lo_http_client->request->set_form_field(
      EXPORTING
        name  =  'customerid'    " Name of the form field
        value =  '2938675364725785773K3673'
               " Value of the form field
     ).
     lo_http_client->request->set_form_field(
    EXPORTING
        name  =  'clnPolCode'    " Name of the form field
        value =  polcode
               " Value of the form field
     ).

*     * Send the HTTP Post
  call method lo_http_client->send
    exporting
      timeout                    = 30   " 15 Seconds
    exceptions
      http_communication_failure = 1
      http_invalid_state         = 2.

        CALL METHOD lo_http_client->receive
          EXCEPTIONS
            http_communication_failure = 1
            http_invalid_state         = 2
            http_processing_failed     = 3.
*            OTHERS                     = 5.


*   getting response

     response = lo_http_client->response->get_cdata( ).



        /ui2/cl_json=>deserialize(

        EXPORTING json = response pretty_name = /ui2/cl_json=>pretty_mode-camel_case CHANGING data = m_response ).

      status = m_response-statusCodeMsg.

     if status = 'successful'.
       update zta_mcs_mem_dets set picked_status = 1 STATUS_DATE = sy-datum STATUS_TIME = sy-uzeit where member_no = wa-member_no.

     else.
       update zta_mcs_mem_dets set picked_status = 2 STATUS_DATE = sy-datum STATUS_TIME = sy-uzeit where member_no = wa-member_no.

     ENDIF.

      clear wa.
      clear response.

      ENDLOOP.


ENDFORM.